import HelperClasses.Pair;
import java.util.* ;
import HelperClasses.sha256;

public class CRF extends sha256 {

    // Stores the output size of the function Fn()
    public int outputsize;

    CRF(int size) {
        outputsize = size;
        assert outputsize <= 64;
    }

    // Outputs the mapped outputSize characters long string s' for an input string s
    public String Fn(String s) {
        String shasum = encrypt(s);
        return shasum.substring(0,outputsize);
    }

    /*==========================
    |- To be done by students -|
    ==========================*/

    public Pair<String, String> FindCollDeterministic() {
        Vector <String> v1 = new Vector<String>() ;
        
        String s1 = "ABCDEF", s2 = null, temp ;
        boolean flag = true ;
        CRF obj = new CRF(outputsize) ;
        
        while ( flag ) {
        	temp = obj.Fn(s1) ;
        	for( int i=0 ; i<v1.size() ; ++i ) {
        		if ( temp.equals( v1.get(i) ) ) { s2 = v1.get(i-1) ; flag = false ; break ;}
        	}
        	if ( flag ) { v1.add(temp) ; s1 = temp ; }
        }
        
        Pair <String, String> p1 = new Pair<String, String>(s1,s2) ;
        return p1;
    }

    public void FindCollRandomized() {
        
        String attempt_filename = "FindCollRandomizedAttempts.txt";
        String outcome_filename = "FindCollRandomizedOutcome.txt";

        
    }
}